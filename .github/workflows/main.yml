name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # - name: Clean workspace
      #   uses: AutoModality/action-clean@v1

      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Setup Node.js
      #   run: |
      #     export NVM_DIR="$HOME/.nvm"
      #     [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # Load nvm
      #     [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # Load bash_completion

      #     if [ -f ".nvmrc" ]; then
      #       NODE_VERSION=$(cat .nvmrc)
      #       nvm install "$NODE_VERSION"
      #       nvm use "$NODE_VERSION"
      #     else
      #       nvm install node
      #       nvm use node
      #     fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org/'
          # node-version: 19.9.0

      # - name: Setup Node.js with nvm
      #   uses: dcodeIO/setup-node-nvm@master
      #   with:
      #     node-version: 20.12.2

      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE_CONTENT }}" > .env

      - name: Remove node_modules and package-lock.json
        run: |
          rm -rf node_modules package-lock.json

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      # npm install --legacy-peer-deps --no-save
      # - name: Install Dependencies and Build
      #   run: |
      #     npm install --legacy-peer-deps
      #     npm install dayjs --legacy-peer-deps
      #     npm list --depth=0
      #     npm run build
      #   env:
      #     CI: true

      - name: Install Dependencies and Build
        run: |
          yarn install --ignore-engines
          yarn add dayjs
          yarn build
        env:
          CI: true

      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh
          echo -e "${{ secrets.PHIMHAY247_PK }}" > ~/.ssh/id_rsa
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/id_rsa

      - name: Set up known hosts
        run:
          ssh-keyscan -t rsa ${{ secrets.PHIMHAY247_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to Server
        run: |
          rsync -r --update --delete-after ./.output/public ${{ secrets.PHIMHAY247_USERNAME }}@${{ secrets.PHIMHAY247_IP }}:${{secrets.TARGET}}

          rsync -r --update --delete-after ./.output/server ${{ secrets.PHIMHAY247_USERNAME }}@${{ secrets.PHIMHAY247_IP }}:${{secrets.TARGET}}

          rsync -r --update --delete-after ./.output/public/ ${{ secrets.PHIMHAY247_USERNAME }}@${{ secrets.PHIMHAY247_IP }}:${{secrets.CDN_TARGET}}

          rsync -r --update --delete-after ./ecosystem.config.cjs ${{ secrets.PHIMHAY247_USERNAME }}@${{ secrets.PHIMHAY247_IP }}:${{secrets.TARGET}}

        # rsync -r --update --delete-after ./.output/public/_nuxt ${{ secrets.PHIMHAY247_USERNAME }}@${{ secrets.PHIMHAY247_IP }}:${{secrets.CDN_TARGET}}

        # rsync -r --update --delete-after ./.output/public/css ${{ secrets.PHIMHAY247_USERNAME }}@${{ secrets.PHIMHAY247_IP }}:${{secrets.CDN_TARGET}}

        # rsync -r --update --delete-after ./.output/public/fonts ${{ secrets.PHIMHAY247_USERNAME }}@${{ secrets.PHIMHAY247_IP }}:${{secrets.CDN_TARGET}}

        # rsync -r --update --delete-after ./.output/public/gifs ${{ secrets.PHIMHAY247_USERNAME }}@${{ secrets.PHIMHAY247_IP }}:${{secrets.CDN_TARGET}}

        # rsync -r --update --delete-after ./.output/public/imgs ${{ secrets.PHIMHAY247_USERNAME }}@${{ secrets.PHIMHAY247_IP }}:${{secrets.CDN_TARGET}}

        # rsync -r --update --delete-after ./.output/public/js ${{ secrets.PHIMHAY247_USERNAME }}@${{ secrets.PHIMHAY247_IP }}:${{secrets.CDN_TARGET}}

        # rsync -r --update --delete-after ./.output/public/svgs ${{ secrets.PHIMHAY247_USERNAME }}@${{ secrets.PHIMHAY247_IP }}:${{secrets.CDN_TARGET}}

        # rsync -r --update --delete-after ./.output/public/_payload.json ${{ secrets.PHIMHAY247_USERNAME }}@${{ secrets.PHIMHAY247_IP }}:${{secrets.CDN_TARGET}}

        # rsync -r --update --delete-after ./.output/public/_payload.json.br ${{ secrets.PHIMHAY247_USERNAME }}@${{ secrets.PHIMHAY247_IP }}:${{secrets.CDN_TARGET}}

        # rsync -r --update --delete-after ./.output/public/_payload.json.gz ${{ secrets.PHIMHAY247_USERNAME }}@${{ secrets.PHIMHAY247_IP }}:${{secrets.CDN_TARGET}}

        # rsync -r --update --delete-after ./.output/public/favicon.ico ${{ secrets.PHIMHAY247_USERNAME }}@${{ secrets.PHIMHAY247_IP }}:${{secrets.CDN_TARGET}}

      - name: Start app on Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PHIMHAY247_IP }}
          username: ${{ secrets.PHIMHAY247_USERNAME }}
          key: ${{ secrets.PHIMHAY247_PK }}
          script: |
            cd ${{secrets.TARGET}}
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            pm2 reload ecosystem.config.cjs
